#=========================================================================
# Modular C++ Build System Subproject Makefile Fragment
#=========================================================================
# Please read the documenation in 'mcppbs-uguide.txt' for more details
# on how the Modular C++ Build System works.

rgb2cmyk_intdeps  = @rgb2cmyk_intdeps@
rgb2cmyk_cppflags = @rgb2cmyk_cppflags@
rgb2cmyk_ldflags  = @rgb2cmyk_ldflags@
rgb2cmyk_libs     = @rgb2cmyk_libs@

rgb2cmyk_hdrs = \
  rgb2cmyk-scalar.h \
  rgb2cmyk-xloops.h \
  rgb2cmyk-PixelUtils.h \

rgb2cmyk_srcs = \
  rgb2cmyk-PixelUtils.cc \

rgb2cmyk_clang_srcs = \
  rgb2cmyk-scalar.cc \
  rgb2cmyk-xloops.cc \

rgb2cmyk_install_prog_srcs = \
  rgb2cmyk.cc \

#-------------------------------------------------------------------------
# Rules for running benchmarks with --verify option
#-------------------------------------------------------------------------

rgb2cmyk_verify_outs := $(patsubst %.cc, %.out, $(rgb2cmyk_install_prog_srcs))
$(rgb2cmyk_verify_outs) : %.out : %
	$(RUN) $(RUNFLAGS) ./$< --impl all --verify 2>&1 | tee $@

outs += $(rgb2cmyk_verify_outs)
junk += $(rgb2cmyk_verify_outs)
check-rgb2cmyk : $(rgb2cmyk_verify_outs)

#-------------------------------------------------------------------------
# Rules for running benchmarks using PISA LLVM toolchain
#-------------------------------------------------------------------------

# Note: Debug option (-g) is filtered out of the CXXFLAGS as custom LLVM
# Passes set custom debug information in the toolchain to work correctly
# and not disabling the debug option may cause them to fail.
# Note: added _MIPS_ARCH_MAVEN define to the clang flags because some apps
# do conditional compiling based on this

RGB2CMYK_CLANG       = @rgb2cmyk_clang@
RGB2CMYK_CXXFLAGS    = $(filter-out -g, $(CXXFLAGS))
RGB2CMYK_CLANG_FLAGS = $(RGB2CMYK_CXXFLAGS) -MMD -MP -I. $(CPPFLAGS) -target pisael-brg -D_MIPS_ARCH_MAVEN

rgb2cmyk_clang_objs := $(patsubst %.cc, %.o, $(rgb2cmyk_clang_srcs))
rgb2cmyk_clang_deps := $(patsubst %.cc, %.d, $(rgb2cmyk_clang_srcs))

ifneq ($(RGB2CMYK_CLANG),no)

$(rgb2cmyk_clang_objs) : %.o : %.cc
	$(RGB2CMYK_CLANG) $(RGB2CMYK_CLANG_FLAGS) -c $<

rgb2cmyk_objs += $(rgb2cmyk_clang_objs)
rgb2cmyk_deps += $(rgb2cmyk_clang_deps)
rgb2cmyk_junk += $(rgb2cmyk_clang_objs) $(rgb2cmyk_clang_deps)

else
rgb2cmyk_srcs += $(rgb2cmyk_clang_srcs)
endif

#-------------------------------------------------------------------------
# Rules for preprocessing C++ sources with maven-vtcpp
#-------------------------------------------------------------------------
# If we are compiling for maven then we actually run the preprocessor,
# otherwise we just copy the .vtcc file to a .cc file in the build
# directory since no preprocessing is necessary.

# Preprocessor is set from configure, we need to run the preprocessor
# with the exact same flags we will be using to actually compile the
# generated source.

RGB2CMYK_VTCPP       = @rgb2cmyk_vtcpp@
RGB2CMYK_VTCPP_FLAGS = $(CXXFLAGS) -MMD -MP -I. $(CPPFLAGS)

# Preprocessing template
#  $(1) : source type (test,prog,install_prog)
#  $(2) : extra cppflags

define rgb2cmyk_vtcpp_template

$(1)_vtcxx_srcs    := $$(filter %.vtcc, $$($(1)_srcs))
$(1)_vtcxx_gensrcs := $$(patsubst %.vtcc, %.cc,   $$($(1)_vtcxx_srcs))
$(1)_vtcxx_deps    := $$(patsubst %.vtcc, %.cc.d, $$($(1)_vtcxx_srcs))

$$($(1)_vtcxx_gensrcs) : %.cc : %.vtcc
ifneq ($(RGB2CMYK_VTCPP),no)
	$(RGB2CMYK_VTCPP) $(RGB2CMYK_VTCPP_FLAGS) $(rgb2cmyk_cppflags) $(2) -c $$<
else
	cp $$< $$@
endif

$(1)_srcs  := $$(filter-out %.vtcc, $$($(1)_srcs))
$(1)_srcs  += $$($(1)_vtcxx_gensrcs)
rgb2cmyk_deps += $$($(1)_vtcxx_deps)
rgb2cmyk_junk += $$($(1)_vtcxx_gensrcs) $$($(1)_vtcxx_deps)

endef

# Instantiate preprocessing template for the various types of sources
# including unit tests, C++ programs, and installed C++ programs

$(eval $(call rgb2cmyk_vtcpp_template,rgb2cmyk_test,$(utst_cppflags)))
$(eval $(call rgb2cmyk_vtcpp_template,rgb2cmyk))
$(eval $(call rgb2cmyk_vtcpp_template,rgb2cmyk_prog))
$(eval $(call rgb2cmyk_vtcpp_template,rgb2cmyk_install_prog))


